load("~/GitHub/ecac-bank-loans/datasets.RData")
library(dplyr)
#################################
## FILTER DATASETS ##############
# transform strings to int
account$frequency <- as.factor(account$frequency)
levels(account$frequency) <- 1:length(levels(account$frequency))
account$frequency <- as.numeric(account$frequency)
card_test$type <- as.factor(card_test$type)
levels(card_test$type) <- 1:length(levels(card_test$type))
card_test$type <- as.numeric(card_test$type)
card_train$type <- as.factor(card_train$type)
levels(card_train$type) <- 1:length(levels(card_train$type))
card_train$type <- as.numeric(card_train$type)
disp$type <- as.factor(disp$type)
levels(disp$type) <- 1:length(levels(disp$type))
disp$type <- as.numeric(disp$type)
district$name <- as.factor(district$name)
levels(district$name) <- 1:length(levels(district$name))
district$name <- as.numeric(district$name)
district$region <- as.factor(district$region)
levels(district$region) <- 1:length(levels(district$region))
district$region <- as.numeric(district$region)
trans_train$type <- as.factor(trans_train$type)
levels(trans_train$type) <- 1:length(levels(trans_train$type))
trans_train$type <- as.numeric(trans_train$type)
trans_train$operation <- as.factor(trans_train$operation)
levels(trans_train$operation) <- 1:length(levels(trans_train$operation))
trans_train$operation <- as.numeric(trans_train$operation)
trans_train$k_symbol <- as.factor(trans_train$k_symbol)
levels(trans_train$k_symbol) <- 1:length(levels(trans_train$k_symbol))
trans_train$k_symbol <- as.numeric(trans_train$k_symbol)
trans_test$type <- as.factor(trans_test$type)
levels(trans_test$type) <- 1:length(levels(trans_test$type))
trans_test$type <- as.numeric(trans_test$type)
trans_test$operation <- as.factor(trans_test$operation)
levels(trans_test$operation) <- 1:length(levels(trans_test$operation))
trans_test$operation <- as.numeric(trans_test$operation)
trans_test$k_symbol <- as.factor(trans_test$k_symbol)
levels(trans_test$k_symbol) <- 1:length(levels(trans_test$k_symbol))
trans_test$k_symbol <- as.numeric(trans_test$k_symbol)
#set missing values
missing_un_95 <- (district$`unemploymant rate '95`) == "?"
district$`unemploymant rate '95`[missing_un_95] <- district$`unemploymant rate '96`[missing_un_95]
missing_crimes_95 <- (district$`no. of commited crimes '95`) == "?"
district$`no. of commited crimes '95`[missing_crimes_95] <- district$`no. of commited crimes '96`[missing_crimes_95]
district$`unemploymant rate '95` <- as.numeric(district$`unemploymant rate '95`)
district$`no. of commited crimes '95` <- as.numeric(district$`no. of commited crimes '95`)
#get women
women <- client %>% filter( ((birth_number / 100) %% 100) > 50)
men <- client %>% filter( ((birth_number / 100) %% 100) < 50)
#normalize date
women["birth_number"] <- women$birth_number - 5000
#set gender
women[,"gender"] <- 0
men[,"gender"] <- 1
client <- rbind(women,men)
client <- client[ with(client, order(client_id)),]
## /FILTER DATASETS #############
#################################
# districts
district[,"diff_unemploymant"] <- district[,"unemploymant rate '96"] - district[,"unemploymant rate '95"]
district[,"avg_unemploymant"] <- (district[,"unemploymant rate '96"] + district[,"unemploymant rate '95"])/2
district <- subset(district, select = -c(`unemploymant rate '95`, `unemploymant rate '96`))
district[,"diff_crimes"] <- district[,"no. of commited crimes '96"] - district[,"no. of commited crimes '95"]
district[,"avg_crimes"] <- (district[,"no. of commited crimes '96"] + district[,"no. of commited crimes '95"])/2
district[,"ratio_crimes"] <- district[,"avg_crimes"]/district[,"no. of inhabitants"]
district <- subset(district, select = -c(`no. of commited crimes '95`, `no. of commited crimes '96`))
#account
account$date <- as.Date(as.character(account$date + 19000000), "%Y%m%d")
#cards
card_test$issued <- as.Date(as.character(card_test$issued + 19000000), "%Y%m%d")
card_train$issued <- as.Date(as.character(card_train$issued + 19000000), "%Y%m%d")
#client
client$birth_number <- as.Date(as.character(client$birth_number + 19000000), "%Y%m%d")
client[,"birth_year"] <- as.numeric(format(client$birth_number,'%Y'))
#loan
loan_test$date <- as.Date(as.character(loan_test$date + 19000000), "%Y%m%d")
loan_train$date <- as.Date(as.character(loan_train$date + 19000000), "%Y%m%d")
#trans
trans_test$date <- as.Date(as.character(trans_test$date + 19000000), "%Y%m%d")
trans_train$date <- as.Date(as.character(trans_train$date + 19000000), "%Y%m%d")
View(loan_train)
View(loan_train)
loan_train <- subset(loan_train, -c(date))
loan_train <- subset(loan_train, select=-c(date))
loan_test <- subset(loan_test, select=-c(date))
View(account)
View(account)
account <- subset(account, select=-c(frequency))
View(disp)
disp_owners <- disp %>% filter(type == 2)
View(disp_owners)
disp_owners <- subset(disp_owners, select=-c(type))
View(disp_owners)
disp_owners <-subset(disp_owners, select=-c(disp_id))
View(client)
accounts <- merge(disp_owners,client)
accounts <- merge(accounts,account)
View(accounts)
accounts <- merge(disp_owners,client)
View(accounts)
loan_train <- merge(loan_train, accounts)
loan_test <- merge(loan_test, accounts)
loan_train <- subset(loan_train, select=-c(birth_year))
loan_test <- subset(loan_test, select=-c(birth_year))
View(trans_test)
account_household_train <- trans_train %>% slice(which(k_symbol == 1))
account_household_train <- aggregate(account_household_train[,"amount"], list(account_id = account_household_train$account_id), mean)
colnames(account_household_train)[2] <- "household_amount"
account_household_test <- trans_test %>% slice(which(k_symbol == 1))
account_household_test <- aggregate(account_household_test[,"amount"], list(account_id = account_household_test$account_id), mean)
colnames(account_household_test)[2] <- "household_amount"
View(account_household_test)
loan_train <- merge(account_household_train, loan_train)
loan_test <- merge(account_household_test, loan_test)
View(card_train)
colnames(loan_train)[3] <- "Id"
colnames(loan_train)[7] <- "Predicted"
write.csv(loan_train, file = "C:\\Users\\andre\\Documents\\GitHub\\ecac-bank-loans\\datasets\\train_10.csv", row.names = FALSE)
colnames(loan_test)[3] <- "Id"
colnames(loan_test)[7] <- "Predicted"
write.csv(loan_test, file = "C:\\Users\\andre\\Documents\\GitHub\\ecac-bank-loans\\datasets\\test_10.csv", row.names = FALSE)
load("~/GitHub/ecac-bank-loans/datasets.RData")
library(dplyr)
#################################
## FILTER DATASETS ##############
# transform strings to int
account$frequency <- as.factor(account$frequency)
levels(account$frequency) <- 1:length(levels(account$frequency))
account$frequency <- as.numeric(account$frequency)
card_test$type <- as.factor(card_test$type)
levels(card_test$type) <- 1:length(levels(card_test$type))
card_test$type <- as.numeric(card_test$type)
card_train$type <- as.factor(card_train$type)
levels(card_train$type) <- 1:length(levels(card_train$type))
card_train$type <- as.numeric(card_train$type)
disp$type <- as.factor(disp$type)
levels(disp$type) <- 1:length(levels(disp$type))
disp$type <- as.numeric(disp$type)
district$name <- as.factor(district$name)
levels(district$name) <- 1:length(levels(district$name))
district$name <- as.numeric(district$name)
district$region <- as.factor(district$region)
levels(district$region) <- 1:length(levels(district$region))
district$region <- as.numeric(district$region)
trans_train$type <- as.factor(trans_train$type)
levels(trans_train$type) <- 1:length(levels(trans_train$type))
trans_train$type <- as.numeric(trans_train$type)
trans_train$operation <- as.factor(trans_train$operation)
levels(trans_train$operation) <- 1:length(levels(trans_train$operation))
trans_train$operation <- as.numeric(trans_train$operation)
trans_train$k_symbol <- as.factor(trans_train$k_symbol)
levels(trans_train$k_symbol) <- 1:length(levels(trans_train$k_symbol))
trans_train$k_symbol <- as.numeric(trans_train$k_symbol)
trans_test$type <- as.factor(trans_test$type)
levels(trans_test$type) <- 1:length(levels(trans_test$type))
trans_test$type <- as.numeric(trans_test$type)
trans_test$operation <- as.factor(trans_test$operation)
levels(trans_test$operation) <- 1:length(levels(trans_test$operation))
trans_test$operation <- as.numeric(trans_test$operation)
trans_test$k_symbol <- as.factor(trans_test$k_symbol)
levels(trans_test$k_symbol) <- 1:length(levels(trans_test$k_symbol))
trans_test$k_symbol <- as.numeric(trans_test$k_symbol)
#set missing values
missing_un_95 <- (district$`unemploymant rate '95`) == "?"
district$`unemploymant rate '95`[missing_un_95] <- district$`unemploymant rate '96`[missing_un_95]
missing_crimes_95 <- (district$`no. of commited crimes '95`) == "?"
district$`no. of commited crimes '95`[missing_crimes_95] <- district$`no. of commited crimes '96`[missing_crimes_95]
district$`unemploymant rate '95` <- as.numeric(district$`unemploymant rate '95`)
district$`no. of commited crimes '95` <- as.numeric(district$`no. of commited crimes '95`)
#get women
women <- client %>% filter( ((birth_number / 100) %% 100) > 50)
men <- client %>% filter( ((birth_number / 100) %% 100) < 50)
#normalize date
women["birth_number"] <- women$birth_number - 5000
#set gender
women[,"gender"] <- 0
men[,"gender"] <- 1
client <- rbind(women,men)
client <- client[ with(client, order(client_id)),]
## /FILTER DATASETS #############
#################################
# districts
district[,"diff_unemploymant"] <- district[,"unemploymant rate '96"] - district[,"unemploymant rate '95"]
district[,"avg_unemploymant"] <- (district[,"unemploymant rate '96"] + district[,"unemploymant rate '95"])/2
district <- subset(district, select = -c(`unemploymant rate '95`, `unemploymant rate '96`))
district[,"diff_crimes"] <- district[,"no. of commited crimes '96"] - district[,"no. of commited crimes '95"]
district[,"avg_crimes"] <- (district[,"no. of commited crimes '96"] + district[,"no. of commited crimes '95"])/2
district[,"ratio_crimes"] <- district[,"avg_crimes"]/district[,"no. of inhabitants"]
district <- subset(district, select = -c(`no. of commited crimes '95`, `no. of commited crimes '96`))
#account
account$date <- as.Date(as.character(account$date + 19000000), "%Y%m%d")
#cards
card_test$issued <- as.Date(as.character(card_test$issued + 19000000), "%Y%m%d")
card_train$issued <- as.Date(as.character(card_train$issued + 19000000), "%Y%m%d")
#client
client$birth_number <- as.Date(as.character(client$birth_number + 19000000), "%Y%m%d")
#loan
loan_test$date <- as.Date(as.character(loan_test$date + 19000000), "%Y%m%d")
loan_train$date <- as.Date(as.character(loan_train$date + 19000000), "%Y%m%d")
#trans
trans_test$date <- as.Date(as.character(trans_test$date + 19000000), "%Y%m%d")
trans_train$date <- as.Date(as.character(trans_train$date + 19000000), "%Y%m%d")
loan_train <- subset(loan_train, select=-c(date))
loan_test <- subset(loan_test, select=-c(date))
#discarded account table
disp_owners <- disp %>% filter(type == 2)
disp_owners <- subset(disp_owners, select = -c(type,disp_id))
accounts <- merge(disp_owners,client)
loan_train <- merge(loan_train, accounts)
loan_test <- merge(loan_test, accounts)
#household
account_household_train <- trans_train %>% slice(which(k_symbol == 1))
account_household_train <- aggregate(account_household_train[,"amount"], list(account_id = account_household_train$account_id), mean)
colnames(account_household_train)[2] <- "household_amount"
account_household_test <- trans_test %>% slice(which(k_symbol == 1))
account_household_test <- aggregate(account_household_test[,"amount"], list(account_id = account_household_test$account_id), mean)
colnames(account_household_test)[2] <- "household_amount"
#add household to loan
loan_train <- left_join(loan_train,account_household_train)
loan_test <- left_join(loan_test,account_household_test)
loan_train$household_amount[is.na(loan_train$household_amount)] <- 0
loan_test$household_amount[is.na(loan_test$household_amount)] <- 0
colnames(loan_train)[2] <- "Id"
colnames(loan_train)[6] <- "Predicted"
write.csv(loan_train, file = "C:\\Users\\andre\\Documents\\GitHub\\ecac-bank-loans\\datasets\\train_10.csv", row.names = FALSE)
colnames(loan_test)[2] <- "Id"
colnames(loan_test)[6] <- "Predicted"
write.csv(loan_test, file = "C:\\Users\\andre\\Documents\\GitHub\\ecac-bank-loans\\datasets\\test_10.csv", row.names = FALSE)
View(district)
district <- subset(district, select = -c(`no. of municipalities with inhabitants < 499`,`no. of municipalities with inhabitants 500-1999`,`no. of municipalities with inhabitants 2000-9999`,`no. of municipalities with inhabitants >10000`,`no. of cities`))
loan_train <- left_join(loan_train,district, by.x="district_id", by.y="code")
loan_train <- merge(loan_train, district, by.x="district_id", by.y="code", all.x = TRUE)
loan_test <- merge(loan_test, district, by.x="district_id", by.y="code", all.x = TRUE)
write.csv(loan_train, file = "C:\\Users\\andre\\Documents\\GitHub\\ecac-bank-loans\\datasets\\train_11.csv", row.names = FALSE)
write.csv(loan_test, file = "C:\\Users\\andre\\Documents\\GitHub\\ecac-bank-loans\\datasets\\test_11.csv", row.names = FALSE)
