district$`unemploymant rate '95`[missing_un_95] <- district$`unemploymant rate '96`[missing_un_95]
missing_crimes_95 <- (district$`no. of commited crimes '95`) == "?"
district$`no. of commited crimes '95`[missing_crimes_95] <- district$`no. of commited crimes '96`[missing_crimes_95]
district$`unemploymant rate '95` <- as.numeric(district$`unemploymant rate '95`)
district$`no. of commited crimes '95` <- as.numeric(district$`no. of commited crimes '95`)
#get women
women <- client %>% filter( ((birth_number / 100) %% 100) > 50)
men <- client %>% filter( ((birth_number / 100) %% 100) < 50)
#normalize date
women["birth_number"] <- women$birth_number - 5000
#set gender
women[,"gender"] <- 0
men[,"gender"] <- 1
client <- rbind(women,men)
client <- client[ with(client, order(client_id)),]
## /FILTER DATASETS #############
#################################
# districts
district[,"diff_unemploymant"] <- district[,"unemploymant rate '96"] - district[,"unemploymant rate '95"]
district[,"avg_unemploymant"] <- (district[,"unemploymant rate '96"] + district[,"unemploymant rate '95"])/2
district <- subset(district, select = -c(`unemploymant rate '95`, `unemploymant rate '96`))
district[,"diff_crimes"] <- district[,"no. of commited crimes '96"] - district[,"no. of commited crimes '95"]
district[,"avg_crimes"] <- (district[,"no. of commited crimes '96"] + district[,"no. of commited crimes '95"])/2
district[,"ratio_crimes"] <- district[,"avg_crimes"]/district[,"no. of inhabitants"]
district <- subset(district, select = -c(`no. of commited crimes '95`, `no. of commited crimes '96`))
#account
account$date <- as.Date(as.character(account$date + 19000000), "%Y%m%d")
#cards
card_test$issued <- as.Date(as.character(card_test$issued + 19000000), "%Y%m%d")
card_train$issued <- as.Date(as.character(card_train$issued + 19000000), "%Y%m%d")
#client
client$birth_number <- as.Date(as.character(client$birth_number + 19000000), "%Y%m%d")
#loan
loan_test$date <- as.Date(as.character(loan_test$date + 19000000), "%Y%m%d")
loan_train$date <- as.Date(as.character(loan_train$date + 19000000), "%Y%m%d")
#trans
trans_test$date <- as.Date(as.character(trans_test$date + 19000000), "%Y%m%d")
trans_train$date <- as.Date(as.character(trans_train$date + 19000000), "%Y%m%d")
loan_train <- subset(loan_train, select=-c(date))
loan_test <- subset(loan_test, select=-c(date))
#discarded account table
disp_owners <- disp %>% filter(type == 2)
disp_owners <- subset(disp_owners, select = -c(type,disp_id))
accounts <- merge(disp_owners,client)
loan_train <- merge(loan_train, accounts)
loan_test <- merge(loan_test, accounts)
#household
account_household_train <- trans_train %>% slice(which(k_symbol == 1))
account_household_train <- aggregate(account_household_train[,"amount"], list(account_id = account_household_train$account_id), mean)
colnames(account_household_train)[2] <- "household_amount"
account_household_test <- trans_test %>% slice(which(k_symbol == 1))
account_household_test <- aggregate(account_household_test[,"amount"], list(account_id = account_household_test$account_id), mean)
colnames(account_household_test)[2] <- "household_amount"
#add household to loan
loan_train <- left_join(loan_train,account_household_train)
loan_test <- left_join(loan_test,account_household_test)
loan_train$household_amount[is.na(loan_train$household_amount)] <- 0
loan_test$household_amount[is.na(loan_test$household_amount)] <- 0
colnames(loan_train)[2] <- "Id"
colnames(loan_train)[6] <- "Predicted"
write.csv(loan_train, file = "C:\\Users\\andre\\Documents\\GitHub\\ecac-bank-loans\\datasets\\train_10.csv", row.names = FALSE)
colnames(loan_test)[2] <- "Id"
colnames(loan_test)[6] <- "Predicted"
write.csv(loan_test, file = "C:\\Users\\andre\\Documents\\GitHub\\ecac-bank-loans\\datasets\\test_10.csv", row.names = FALSE)
View(district)
district <- subset(district, select = -c(`no. of municipalities with inhabitants < 499`,`no. of municipalities with inhabitants 500-1999`,`no. of municipalities with inhabitants 2000-9999`,`no. of municipalities with inhabitants >10000`,`no. of cities`))
loan_train <- left_join(loan_train,district, by.x="district_id", by.y="code")
loan_train <- merge(loan_train, district, by.x="district_id", by.y="code", all.x = TRUE)
loan_test <- merge(loan_test, district, by.x="district_id", by.y="code", all.x = TRUE)
write.csv(loan_train, file = "C:\\Users\\andre\\Documents\\GitHub\\ecac-bank-loans\\datasets\\train_11.csv", row.names = FALSE)
write.csv(loan_test, file = "C:\\Users\\andre\\Documents\\GitHub\\ecac-bank-loans\\datasets\\test_11.csv", row.names = FALSE)
load("~/GitHub/ecac-bank-loans/datasets.RData")
#get women
women <- client %>% filter( ((birth_number / 100) %% 100) > 50)
men <- client %>% filter( ((birth_number / 100) %% 100) < 50)
#normalize date
women["birth_number"] <- women$birth_number - 5000
#set gender
women[,"gender"] <- 0
men[,"gender"] <- 1
client <- rbind(women,men)
client <- client[ with(client, order(client_id)),]
#client
client$birth_number <- as.Date(as.character(client$birth_number + 19000000), "%Y%m%d")
client[,"birth_year"] <- as.numeric(format(client$birth_number,'%Y'))
client_district <- merge(client, district, by.x = "district_id", by.y = "code")
account_balances <- trans_train %>% group_by(account_id) %>% slice(which.max(date))
account_balances <- subset(account_balances, select = c(account_id, balance, date))
account_household <- trans_train %>% slice(which(k_symbol == "household"))
account_household <- aggregate(account_household[,"amount"], list(account_id = account_household$account_id), mean)
colnames(account_household)[2] <- "household_amount"
account_household <- merge(account, account_household, by = "account_id", all.x = TRUE)
library(dplyr)
#get women
women <- client %>% filter( ((birth_number / 100) %% 100) > 50)
men <- client %>% filter( ((birth_number / 100) %% 100) < 50)
#normalize date
women["birth_number"] <- women$birth_number - 5000
#set gender
women[,"gender"] <- 0
men[,"gender"] <- 1
client <- rbind(women,men)
client <- client[ with(client, order(client_id)),]
#client
client$birth_number <- as.Date(as.character(client$birth_number + 19000000), "%Y%m%d")
client[,"birth_year"] <- as.numeric(format(client$birth_number,'%Y'))
client_district <- merge(client, district, by.x = "district_id", by.y = "code")
account_balances <- trans_train %>% group_by(account_id) %>% slice(which.max(date))
account_balances <- subset(account_balances, select = c(account_id, balance, date))
account_household <- trans_train %>% slice(which(k_symbol == "household"))
account_household <- aggregate(account_household[,"amount"], list(account_id = account_household$account_id), mean)
colnames(account_household)[2] <- "household_amount"
account_household <- merge(account, account_household, by = "account_id", all.x = TRUE)
library(plotly)
# AGE
clients_per_decade <- c()
for (k in 1:6) {
temp1 <- client %>% filter(birth_year >= k*10+1920) %>% filter(birth_year < k*10+1930)
clients_per_decade[k] <- nrow(temp1)
}
plot(clients_per_decade, type = "l")
plot_ly(
x = c("1920-30", "1930-40", "1940-50", "1950-60", "1960-70", "1970-80"),
y = clients_per_decade,
name = "Clients per decade",
type = "bar"
)
load("~/GitHub/ecac-bank-loans/datasets.RData")
library(dplyr)
#get women
women <- client %>% filter( ((birth_number / 100) %% 100) > 50)
men <- client %>% filter( ((birth_number / 100) %% 100) < 50)
#normalize date
women["birth_number"] <- women$birth_number - 5000
#set gender
women[,"gender"] <- 0
men[,"gender"] <- 1
client <- rbind(women,men)
client <- client[ with(client, order(client_id)),]
#client
client$birth_number <- as.Date(as.character(client$birth_number + 19000000), "%Y%m%d")
client[,"birth_year"] <- as.numeric(format(client$birth_number,'%Y'))
client_district <- merge(client, district, by.x = "district_id", by.y = "code")
account_balances <- trans_train %>% group_by(account_id) %>% slice(which.max(date))
account_balances <- subset(account_balances, select = c(account_id, balance, date))
account_household <- trans_train %>% slice(which(k_symbol == "household"))
account_household <- aggregate(account_household[,"amount"], list(account_id = account_household$account_id), mean)
colnames(account_household)[2] <- "household_amount"
account_household <- merge(account, account_household, by = "account_id", all.x = TRUE)
clients_per_decade <- c()
for (k in 1:6) {
temp1 <- client %>% filter(birth_year >= k*10+1920) %>% filter(birth_year < k*10+1930)
clients_per_decade[k] <- nrow(temp1)
}
plot(clients_per_decade, type = "l")
plot_ly(
x = c("1920-30", "1930-40", "1940-50", "1950-60", "1960-70", "1970-80"),
y = clients_per_decade,
name = "Clients per decade",
type = "bar"
)
install.packages(c("BH", "colorspace", "curl", "hms", "Rcpp"))
# GENDER
clients_per_gender <- c(nrow(men), nrow(women))
plot(clients_per_gender, type = "l")
plot_ly(
x = c("Men", "Women"),
y = clients_per_gender,
name = "Clients per gender",
type = "bar"
)
library(dplyr)
library(plotly)
# GENDER
clients_per_gender <- c(nrow(men), nrow(women))
plot(clients_per_gender, type = "l")
plot_ly(
x = c("Men", "Women"),
y = clients_per_gender,
name = "Clients per gender",
type = "bar"
)
# DISTRICT - REGION
clients_per_region <- c()
region_names <- unique(district$region)
for (r in region_names) {
temp1 <- client_district %>% filter(region == r)
clients_per_region[r] <- nrow(temp1)
}
plot(clients_per_district, type = "l")
plot_ly(
x = region_names,
y = clients_per_region,
name = "Clients per region",
type = "bar"
)
clients_per_district_population <- c()
for (k in 1:6) {
temp1 <- client_district %>% filter(`no. of inhabitants` >= k*50000-50000) %>% filter(`no. of inhabitants` < k*50000)
clients_per_district_population[k] <- nrow(temp1)
}
temp1 <- client_district %>% filter(`no. of inhabitants` >= 300000)
clients_per_district_population[7] <- nrow(temp1)
#plot(clients_per_district_population, type = "l")
plot_ly(
x = c("000-050", "050-100", "100-150", "150-200", "200-250", "250-300", "300-1500"),
y = clients_per_district_population,
name = "Clients per district population",
type = "bar"
)
# LAST BALANCE BY ACCOUNT
accounts_by_balance <- c()
temp1 <- account_balances %>% filter( balance < 0 )
accounts_by_balance[1] <- nrow(temp1)
for (i in 1:10){
temp1 <- account_balances %>% filter(balance >= i*10000-10000) %>% filter(balance < i*10000)
accounts_by_balance[i+1] <- nrow(temp1)
}
temp1 <- account_balances %>% filter( balance >= 100000 )
accounts_by_balance[12] <- nrow(temp1)
plot_ly(
x = c("< 0", "00-10", "10-20", "20-30", "30-40", "40-50", "50-60","60-70", "70-80", "80-90", "90-100", "> 100"),
y = accounts_by_balance,
name = "Account by final balance",
type = "bar"
)
account_has_household <- c()
temp1 <- account_household %>% filter( is.na(household_amount) )
account_has_household[1] <- nrow(temp1)
temp1 <- account_household %>% filter( !is.na(household_amount) )
account_has_household[2] <- nrow(temp1)
plot_ly(
x = c("No", "Yes"),
y = account_has_household,
name = "Pays household?",
type = "bar"
)
accounts_by_household_amount <- c()
accounts_with_household <- account_household %>% filter( !is.na(household_amount) )
for (i in 1:10){
temp1 <- accounts_with_household %>% filter(household_amount >= i*1000-1000) %>% filter(household_amount < i*1000)
accounts_by_household_amount[i] <- nrow(temp1)
}
temp1 <- accounts_with_household %>% filter(household_amount >= 10000)
accounts_by_household_amount[11] <- nrow(temp1)
plot_ly(
x = c("00-01k", "01-02k", "02-03k", "03-04k", "04-05k", "05-06k", "06-07k", "07-08k", "08-09k", "09-10k", "10k -  " ),
y = accounts_by_household_amount,
name = "Accounts by household ammount",
type = "bar"
)
2724/2645
load("~/GitHub/ecac-bank-loans/datasets.RData")
View(account)
library(dplyr)
#################################
## FILTER DATASETS ##############
# transform strings to int
account$frequency <- as.factor(account$frequency)
levels(account$frequency) <- 1:length(levels(account$frequency))
account$frequency <- as.numeric(account$frequency)
card_test$type <- as.factor(card_test$type)
levels(card_test$type) <- 1:length(levels(card_test$type))
card_test$type <- as.numeric(card_test$type)
card_train$type <- as.factor(card_train$type)
levels(card_train$type) <- 1:length(levels(card_train$type))
card_train$type <- as.numeric(card_train$type)
disp$type <- as.factor(disp$type)
levels(disp$type) <- 1:length(levels(disp$type))
disp$type <- as.numeric(disp$type)
district$name <- as.factor(district$name)
levels(district$name) <- 1:length(levels(district$name))
district$name <- as.numeric(district$name)
district$region <- as.factor(district$region)
levels(district$region) <- 1:length(levels(district$region))
district$region <- as.numeric(district$region)
trans_train$type <- as.factor(trans_train$type)
levels(trans_train$type) <- 1:length(levels(trans_train$type))
trans_train$type <- as.numeric(trans_train$type)
trans_train$operation <- as.factor(trans_train$operation)
levels(trans_train$operation) <- 1:length(levels(trans_train$operation))
trans_train$operation <- as.numeric(trans_train$operation)
trans_train$k_symbol <- as.factor(trans_train$k_symbol)
levels(trans_train$k_symbol) <- 1:length(levels(trans_train$k_symbol))
trans_train$k_symbol <- as.numeric(trans_train$k_symbol)
trans_test$type <- as.factor(trans_test$type)
levels(trans_test$type) <- 1:length(levels(trans_test$type))
trans_test$type <- as.numeric(trans_test$type)
trans_test$operation <- as.factor(trans_test$operation)
levels(trans_test$operation) <- 1:length(levels(trans_test$operation))
trans_test$operation <- as.numeric(trans_test$operation)
trans_test$k_symbol <- as.factor(trans_test$k_symbol)
levels(trans_test$k_symbol) <- 1:length(levels(trans_test$k_symbol))
trans_test$k_symbol <- as.numeric(trans_test$k_symbol)
#set missing values
missing_un_95 <- (district$`unemploymant rate '95`) == "?"
district$`unemploymant rate '95`[missing_un_95] <- district$`unemploymant rate '96`[missing_un_95]
missing_crimes_95 <- (district$`no. of commited crimes '95`) == "?"
district$`no. of commited crimes '95`[missing_crimes_95] <- district$`no. of commited crimes '96`[missing_crimes_95]
district$`unemploymant rate '95` <- as.numeric(district$`unemploymant rate '95`)
district$`no. of commited crimes '95` <- as.numeric(district$`no. of commited crimes '95`)
#get women
women <- client %>% filter( ((birth_number / 100) %% 100) > 50)
men <- client %>% filter( ((birth_number / 100) %% 100) < 50)
#normalize date
women["birth_number"] <- women$birth_number - 5000
#set gender
women[,"gender"] <- 0
men[,"gender"] <- 1
client <- rbind(women,men)
client <- client[ with(client, order(client_id)),]
## /FILTER DATASETS #############
#################################
# districts
district[,"diff_unemploymant"] <- district[,"unemploymant rate '96"] - district[,"unemploymant rate '95"]
district[,"avg_unemploymant"] <- (district[,"unemploymant rate '96"] + district[,"unemploymant rate '95"])/2
district <- subset(district, select = -c(`unemploymant rate '95`, `unemploymant rate '96`))
district[,"diff_crimes"] <- district[,"no. of commited crimes '96"] - district[,"no. of commited crimes '95"]
district[,"avg_crimes"] <- (district[,"no. of commited crimes '96"] + district[,"no. of commited crimes '95"])/2
district[,"ratio_crimes"] <- district[,"avg_crimes"]/district[,"no. of inhabitants"]
district <- subset(district, select = -c(`no. of commited crimes '95`, `no. of commited crimes '96`))
district <- subset(district, select = -c(`no. of municipalities with inhabitants < 499`,`no. of municipalities with inhabitants 500-1999`,`no. of municipalities with inhabitants 2000-9999`,`no. of municipalities with inhabitants >10000`,`no. of cities`))
#account
account$date <- as.Date(as.character(account$date + 19000000), "%Y%m%d")
#cards
card_test$issued <- as.Date(as.character(card_test$issued + 19000000), "%Y%m%d")
card_train$issued <- as.Date(as.character(card_train$issued + 19000000), "%Y%m%d")
#client
client$birth_number <- as.Date(as.character(client$birth_number + 19000000), "%Y%m%d")
#loan
loan_test$date <- as.Date(as.character(loan_test$date + 19000000), "%Y%m%d")
loan_train$date <- as.Date(as.character(loan_train$date + 19000000), "%Y%m%d")
#trans
trans_test$date <- as.Date(as.character(trans_test$date + 19000000), "%Y%m%d")
trans_train$date <- as.Date(as.character(trans_train$date + 19000000), "%Y%m%d")
loan_train <- subset(loan_train, select=-c(date))
loan_test <- subset(loan_test, select=-c(date))
#discarded account table
disp_owners <- disp %>% filter(type == 2)
disp_owners <- subset(disp_owners, select = -c(type,disp_id))
accounts <- merge(disp_owners,client)
loan_train <- merge(loan_train, accounts)
loan_test <- merge(loan_test, accounts)
#household
account_household_train <- trans_train %>% slice(which(k_symbol == 1))
account_household_train <- aggregate(account_household_train[,"amount"], list(account_id = account_household_train$account_id), mean)
colnames(account_household_train)[2] <- "household_amount"
account_household_test <- trans_test %>% slice(which(k_symbol == 1))
account_household_test <- aggregate(account_household_test[,"amount"], list(account_id = account_household_test$account_id), mean)
colnames(account_household_test)[2] <- "household_amount"
#add household to loan
loan_train <- left_join(loan_train,account_household_train)
loan_test <- left_join(loan_test,account_household_test)
loan_train$household_amount[is.na(loan_train$household_amount)] <- 0
loan_test$household_amount[is.na(loan_test$household_amount)] <- 0
#add districts
loan_train <- merge(loan_train, district, by.x="district_id", by.y="code", all.x = TRUE)
loan_test <- merge(loan_test, district, by.x="district_id", by.y="code", all.x = TRUE)
View(card_train)
View(loan_train)
View(accounts)
View(account)
View(trans_test)
View(disp)
View(card_train)
card_account_train <- merge(card_train, disp)
card_account_test <- merge(card_test, disp)
View(card_train)
View(card_test)
View(disp)
View(card_account_train)
card_account_train <- merge(card_train, disp, all.x = TRUE)
card_account_test <- merge(card_test, disp, all.x = TRUE)
View(card_account_test)
View(disp)
View(card_train)
View(card_account_train)
View(card_test)
card_account_train <- merge(card_train, by.x="disp_id", by.y="disp_id", disp, all.x = TRUE)
card_account_test <- merge(card_test, disp, by.x="disp_id", by.y="disp_id", all.x = TRUE)
View(trans_test)
View(loan_test)
card_account_train <- subset(card_account_train, select = -c(`type.x`, disp_id, card_id, client_id))
card_account_test <- subset(card_account_test, select = -c(`type.x`, disp_id, card_id, client_id))
loan_train <- merge(loan_train, card_account_train)
loan_test <- merge(loan_test, card_account_test)
View(loan_train)
load("~/GitHub/ecac-bank-loans/datasets.RData")
library(dplyr)
#################################
## FILTER DATASETS ##############
# transform strings to int
account$frequency <- as.factor(account$frequency)
levels(account$frequency) <- 1:length(levels(account$frequency))
account$frequency <- as.numeric(account$frequency)
card_test$type <- as.factor(card_test$type)
levels(card_test$type) <- 1:length(levels(card_test$type))
card_test$type <- as.numeric(card_test$type)
card_train$type <- as.factor(card_train$type)
levels(card_train$type) <- 1:length(levels(card_train$type))
card_train$type <- as.numeric(card_train$type)
disp$type <- as.factor(disp$type)
levels(disp$type) <- 1:length(levels(disp$type))
disp$type <- as.numeric(disp$type)
district$name <- as.factor(district$name)
levels(district$name) <- 1:length(levels(district$name))
district$name <- as.numeric(district$name)
district$region <- as.factor(district$region)
levels(district$region) <- 1:length(levels(district$region))
district$region <- as.numeric(district$region)
trans_train$type <- as.factor(trans_train$type)
levels(trans_train$type) <- 1:length(levels(trans_train$type))
trans_train$type <- as.numeric(trans_train$type)
trans_train$operation <- as.factor(trans_train$operation)
levels(trans_train$operation) <- 1:length(levels(trans_train$operation))
trans_train$operation <- as.numeric(trans_train$operation)
trans_train$k_symbol <- as.factor(trans_train$k_symbol)
levels(trans_train$k_symbol) <- 1:length(levels(trans_train$k_symbol))
trans_train$k_symbol <- as.numeric(trans_train$k_symbol)
trans_test$type <- as.factor(trans_test$type)
levels(trans_test$type) <- 1:length(levels(trans_test$type))
trans_test$type <- as.numeric(trans_test$type)
trans_test$operation <- as.factor(trans_test$operation)
levels(trans_test$operation) <- 1:length(levels(trans_test$operation))
trans_test$operation <- as.numeric(trans_test$operation)
trans_test$k_symbol <- as.factor(trans_test$k_symbol)
levels(trans_test$k_symbol) <- 1:length(levels(trans_test$k_symbol))
trans_test$k_symbol <- as.numeric(trans_test$k_symbol)
#set missing values
missing_un_95 <- (district$`unemploymant rate '95`) == "?"
district$`unemploymant rate '95`[missing_un_95] <- district$`unemploymant rate '96`[missing_un_95]
missing_crimes_95 <- (district$`no. of commited crimes '95`) == "?"
district$`no. of commited crimes '95`[missing_crimes_95] <- district$`no. of commited crimes '96`[missing_crimes_95]
district$`unemploymant rate '95` <- as.numeric(district$`unemploymant rate '95`)
district$`no. of commited crimes '95` <- as.numeric(district$`no. of commited crimes '95`)
#get women
women <- client %>% filter( ((birth_number / 100) %% 100) > 50)
men <- client %>% filter( ((birth_number / 100) %% 100) < 50)
#normalize date
women["birth_number"] <- women$birth_number - 5000
#set gender
women[,"gender"] <- 0
men[,"gender"] <- 1
client <- rbind(women,men)
client <- client[ with(client, order(client_id)),]
## /FILTER DATASETS #############
#################################
# districts
district[,"diff_unemploymant"] <- district[,"unemploymant rate '96"] - district[,"unemploymant rate '95"]
district[,"avg_unemploymant"] <- (district[,"unemploymant rate '96"] + district[,"unemploymant rate '95"])/2
district <- subset(district, select = -c(`unemploymant rate '95`, `unemploymant rate '96`))
district[,"diff_crimes"] <- district[,"no. of commited crimes '96"] - district[,"no. of commited crimes '95"]
district[,"avg_crimes"] <- (district[,"no. of commited crimes '96"] + district[,"no. of commited crimes '95"])/2
district[,"ratio_crimes"] <- district[,"avg_crimes"]/district[,"no. of inhabitants"]
district <- subset(district, select = -c(`no. of commited crimes '95`, `no. of commited crimes '96`))
district <- subset(district, select = -c(`no. of municipalities with inhabitants < 499`,`no. of municipalities with inhabitants 500-1999`,`no. of municipalities with inhabitants 2000-9999`,`no. of municipalities with inhabitants >10000`,`no. of cities`))
#account
account$date <- as.Date(as.character(account$date + 19000000), "%Y%m%d")
#cards
card_test$issued <- as.Date(as.character(card_test$issued + 19000000), "%Y%m%d")
card_train$issued <- as.Date(as.character(card_train$issued + 19000000), "%Y%m%d")
#client
client$birth_number <- as.Date(as.character(client$birth_number + 19000000), "%Y%m%d")
#loan
loan_test$date <- as.Date(as.character(loan_test$date + 19000000), "%Y%m%d")
loan_train$date <- as.Date(as.character(loan_train$date + 19000000), "%Y%m%d")
#trans
trans_test$date <- as.Date(as.character(trans_test$date + 19000000), "%Y%m%d")
trans_train$date <- as.Date(as.character(trans_train$date + 19000000), "%Y%m%d")
loan_train <- subset(loan_train, select=-c(date))
loan_test <- subset(loan_test, select=-c(date))
#discarded account table
disp_owners <- disp %>% filter(type == 2)
disp_owners <- subset(disp_owners, select = -c(type,disp_id))
accounts <- merge(disp_owners,client)
loan_train <- merge(loan_train, accounts)
loan_test <- merge(loan_test, accounts)
#household
account_household_train <- trans_train %>% slice(which(k_symbol == 1))
account_household_train <- aggregate(account_household_train[,"amount"], list(account_id = account_household_train$account_id), mean)
colnames(account_household_train)[2] <- "household_amount"
account_household_test <- trans_test %>% slice(which(k_symbol == 1))
account_household_test <- aggregate(account_household_test[,"amount"], list(account_id = account_household_test$account_id), mean)
colnames(account_household_test)[2] <- "household_amount"
#add household to loan
loan_train <- left_join(loan_train,account_household_train)
loan_test <- left_join(loan_test,account_household_test)
loan_train$household_amount[is.na(loan_train$household_amount)] <- 0
loan_test$household_amount[is.na(loan_test$household_amount)] <- 0
#add districts
loan_train <- merge(loan_train, district, by.x="district_id", by.y="code", all.x = TRUE)
loan_test <- merge(loan_test, district, by.x="district_id", by.y="code", all.x = TRUE)
##############################################################################
#join cards
card_account_train <- merge(card_train, by.x="disp_id", by.y="disp_id", disp, all.x = TRUE)
card_account_test <- merge(card_test, disp, by.x="disp_id", by.y="disp_id", all.x = TRUE)
card_account_train <- subset(card_account_train, select = -c(`type.x`, disp_id, card_id, client_id))
card_account_test <- subset(card_account_test, select = -c(`type.x`, disp_id, card_id, client_id))
loan_train <- merge(loan_train, card_account_train, all.x = TRUE)
loan_test <- merge(loan_test, card_account_test, all.x = TRUE)
loan_train <- subset(loan_train, select = -c(issued))
loan_test <- subset(loan_test, select = -c(issued))
colnames(loan_train)[23] <- "type_card"
colnames(loan_test)[23] <- "type_card"
loan_train$type_card[is.na(loan_train$type_card)] <- 0
#write to file
colnames(loan_train)[3] <- "Id"
colnames(loan_train)[7] <- "Predicted"
write.csv(loan_train, file = "C:\\Users\\andre\\Documents\\GitHub\\ecac-bank-loans\\datasets\\train_12.csv", row.names = FALSE)
colnames(loan_test)[3] <- "Id"
colnames(loan_test)[7] <- "Predicted"
write.csv(loan_test, file = "C:\\Users\\andre\\Documents\\GitHub\\ecac-bank-loans\\datasets\\test_12.csv", row.names = FALSE)
