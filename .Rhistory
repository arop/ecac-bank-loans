trans_train$operation <- as.numeric(trans_train$operation)
trans_train$k_symbol <- as.factor(trans_train$k_symbol)
levels(trans_train$k_symbol) <- 1:length(levels(trans_train$k_symbol))
trans_train$k_symbol <- as.numeric(trans_train$k_symbol)
trans_test$type <- as.factor(trans_test$type)
levels(trans_test$type) <- 1:length(levels(trans_test$type))
trans_test$type <- as.numeric(trans_test$type)
trans_test$operation <- as.factor(trans_test$operation)
levels(trans_test$operation) <- 1:length(levels(trans_test$operation))
trans_test$operation <- as.numeric(trans_test$operation)
trans_test$k_symbol <- as.factor(trans_test$k_symbol)
levels(trans_test$k_symbol) <- 1:length(levels(trans_test$k_symbol))
trans_test$k_symbol <- as.numeric(trans_test$k_symbol)
#set missing values
missing_un_95 <- (district$`unemploymant rate '95`) == "?"
district$`unemploymant rate '95`[missing_un_95] <- district$`unemploymant rate '96`[missing_un_95]
missing_crimes_95 <- (district$`no. of commited crimes '95`) == "?"
district$`no. of commited crimes '95`[missing_crimes_95] <- district$`no. of commited crimes '96`[missing_crimes_95]
district$`unemploymant rate '95` <- as.numeric(district$`unemploymant rate '95`)
district$`no. of commited crimes '95` <- as.numeric(district$`no. of commited crimes '95`)
#get women
women <- client %>% filter( ((birth_number / 100) %% 100) > 50)
men <- client %>% filter( ((birth_number / 100) %% 100) < 50)
#normalize date
women["birth_number"] <- women$birth_number - 5000
#set gender
women[,"gender"] <- 0
men[,"gender"] <- 1
client <- rbind(women,men)
client <- client[ with(client, order(client_id)),]
## /FILTER DATASETS #############
#################################
# districts
district[,"diff_unemploymant"] <- district[,"unemploymant rate '96"] - district[,"unemploymant rate '95"]
district[,"avg_unemploymant"] <- (district[,"unemploymant rate '96"] + district[,"unemploymant rate '95"])/2
district <- subset(district, select = -c(`unemploymant rate '95`, `unemploymant rate '96`))
district[,"diff_crimes"] <- district[,"no. of commited crimes '96"] - district[,"no. of commited crimes '95"]
district[,"avg_crimes"] <- (district[,"no. of commited crimes '96"] + district[,"no. of commited crimes '95"])/2
district[,"ratio_crimes"] <- district[,"avg_crimes"]/district[,"no. of inhabitants"]
district <- subset(district, select = -c(`no. of commited crimes '95`, `no. of commited crimes '96`))
#account
account$date <- as.Date(as.character(account$date + 19000000), "%Y%m%d")
#cards
card_test$issued <- as.Date(as.character(card_test$issued + 19000000), "%Y%m%d")
card_train$issued <- as.Date(as.character(card_train$issued + 19000000), "%Y%m%d")
#client
client$birth_number <- as.Date(as.character(client$birth_number + 19000000), "%Y%m%d")
client[,"birth_year"] <- as.numeric(format(client$birth_number,'%Y'))
#loan
loan_test$date <- as.Date(as.character(loan_test$date + 19000000), "%Y%m%d")
loan_train$date <- as.Date(as.character(loan_train$date + 19000000), "%Y%m%d")
#trans
trans_test$date <- as.Date(as.character(trans_test$date + 19000000), "%Y%m%d")
trans_train$date <- as.Date(as.character(trans_train$date + 19000000), "%Y%m%d")
View(trans_train)
View(district)
client_district <- merge(client, district, by.x = c("district_id"), by.y = c("code"))
#household
account_household <- trans_train %>% slice(which(k_symbol == 1))
account_household <- aggregate(account_household[,"amount"], list(account_id = account_household$account_id), mean)
colnames(account_household)[2] <- "household_amount"
View(account_household)
account_disp <- merge(account, disp)
colnames(account_disp)[4] <- "date_account"
colnames(account_disp)[7] <- "type_disp"
account_disp_household <- left_join(account_disp, account_household)
View(account_disp)
account_disp_trans_test <- merge(account_disp_household, trans_test, by = "account_id")
colnames(account_disp_trans_test)[9] <- "date_trans"
colnames(account_disp_trans_test)[10] <- "type_trans"
colnames(account_disp_trans_test)[12] <- "ammount_trans"
account_disp_trans_loans_test <- merge(account_disp_trans_test, loan_test, by = "account_id")
colnames(account_disp_trans_loans_test)[18] <- "date_loan"
colnames(account_disp_trans_loans_test)[19] <- "ammount_loan"
account_balances <- account_disp_trans_loans_test %>% group_by(account_id) %>% slice(date_trans < date_loan && which.max(date_trans))
sd_balance <- aggregate(trans_test[,"balance"], list(account_id = trans_test$account_id), sd)
sd_balance <- subset(sd_balance, select = c("account_id","balance"))
colnames(sd_balance)[2] <- "balance_sd"
account_balances_sd <- merge(account_balances,sd_balance)
account_balances_sd <- subset(account_balances_sd, select = -c(trans_id,date_trans,type_trans,operation,ammount_trans,k_symbol,bank,account,date_loan,ammount_loan))
account_balances_sd_cards <- full_join(account_balances_sd,card_test)
colnames(account_balances_sd_cards)[15] <- "type_card"
account_balances_sd_cards <- subset(account_balances_sd_cards, select = -c(card_id,issued))
account_balances_sd_cards_clients <- merge(account_balances_sd_cards, client)
account_balances_sd_cards_clients <- subset(account_balances_sd_cards_clients, select = -district_id)
colnames(account_balances_sd_cards)[2] <- "district_id_account"
all_dataset_without_account_district <- merge(account_balances_sd_cards, client_district)
#remove useless ids
final_dataset <- subset(all_dataset_without_account_district, select = -c(district_id_account,client_id,account_id,disp_id,district_id, date_account))
final_dataset$type_card[is.na(final_dataset$type_card)] <- 0
View(final_dataset)
View(account_balances_sd_cards)
View(account_disp)
View(account_disp_household)
View(account_disp_trans_loans_test)
View(account_disp_trans_test)
account_disp_trans_test <- merge(account_disp_household, trans_test, by = "account_id")
colnames(account_disp_trans_test)[10] <- "date_trans"
colnames(account_disp_trans_test)[11] <- "type_trans"
colnames(account_disp_trans_test)[13] <- "ammount_trans"
account_disp_trans_test <- merge(account_disp, trans_test, by = "account_id")
colnames(account_disp_trans_test)[9] <- "date_trans"
colnames(account_disp_trans_test)[10] <- "type_trans"
colnames(account_disp_trans_test)[12] <- "ammount_trans"
library(dplyr)
client_district <- merge(client, district, by.x = c("district_id"), by.y = c("code"))
account_disp <- merge(account, disp)
colnames(account_disp)[4] <- "date_account"
colnames(account_disp)[7] <- "type_disp"
account_disp_trans_test <- merge(account_disp, trans_test, by = "account_id")
colnames(account_disp_trans_test)[9] <- "date_trans"
colnames(account_disp_trans_test)[10] <- "type_trans"
colnames(account_disp_trans_test)[12] <- "ammount_trans"
account_disp_trans_loans_train <- merge(account_disp_trans_train, loan_train, by = "account_id")
colnames(account_disp_trans_loans_train)[18] <- "date_loan"
colnames(account_disp_trans_loans_train)[19] <- "ammount_loan"
account_balances <- account_disp_trans_loans_train %>% group_by(account_id) %>% slice(date_trans < date_loan && which.max(date_trans))
sd_balance <- aggregate(trans_train[,"balance"], list(account_id = trans_train$account_id), sd)
sd_balance <- subset(sd_balance, select = c("account_id","balance"))
colnames(sd_balance)[2] <- "balance_sd"
account_balances_sd <- merge(account_balances,sd_balance)
account_balances_sd <- subset(account_balances_sd, select = -c(trans_id,date_trans,type_trans,operation,ammount_trans,k_symbol,bank,account,date_loan,ammount_loan))
account_balances_sd_cards <- full_join(account_balances_sd,card_train)
colnames(account_balances_sd_cards)[15] <- "type_card"
account_balances_sd_cards <- subset(account_balances_sd_cards, select = -c(card_id,issued))
account_balances_sd_cards_clients <- merge(account_balances_sd_cards, client)
account_balances_sd_cards_clients <- subset(account_balances_sd_cards_clients, select = -district_id)
colnames(account_balances_sd_cards)[2] <- "district_id_account"
all_dataset_without_account_district <- merge(account_balances_sd_cards, client_district)
all_dataset <- merge(account_balances_sd_cards_clients, client_district)
#remove useless ids
final_dataset <- subset(all_dataset_without_account_district, select = -c(district_id_account,client_id,account_id,disp_id,district_id, date_account))
final_dataset$type_card[is.na(final_dataset$type_card)] <- 0
#write.csv(final_dataset, file = "C:\\Users\\andre\\Documents\\GitHub\\ecac-bank-loans\\datasets\\train_08.csv", row.names = FALSE)
load("~/GitHub/ecac-bank-loans/datasets.RData")
library(dplyr)
#################################
## FILTER DATASETS ##############
# transform strings to int
account$frequency <- as.factor(account$frequency)
levels(account$frequency) <- 1:length(levels(account$frequency))
account$frequency <- as.numeric(account$frequency)
card_test$type <- as.factor(card_test$type)
levels(card_test$type) <- 1:length(levels(card_test$type))
card_test$type <- as.numeric(card_test$type)
card_train$type <- as.factor(card_train$type)
levels(card_train$type) <- 1:length(levels(card_train$type))
card_train$type <- as.numeric(card_train$type)
disp$type <- as.factor(disp$type)
levels(disp$type) <- 1:length(levels(disp$type))
disp$type <- as.numeric(disp$type)
district$name <- as.factor(district$name)
levels(district$name) <- 1:length(levels(district$name))
district$name <- as.numeric(district$name)
district$region <- as.factor(district$region)
levels(district$region) <- 1:length(levels(district$region))
district$region <- as.numeric(district$region)
trans_train$type <- as.factor(trans_train$type)
levels(trans_train$type) <- 1:length(levels(trans_train$type))
trans_train$type <- as.numeric(trans_train$type)
trans_train$operation <- as.factor(trans_train$operation)
levels(trans_train$operation) <- 1:length(levels(trans_train$operation))
trans_train$operation <- as.numeric(trans_train$operation)
trans_train$k_symbol <- as.factor(trans_train$k_symbol)
levels(trans_train$k_symbol) <- 1:length(levels(trans_train$k_symbol))
trans_train$k_symbol <- as.numeric(trans_train$k_symbol)
trans_test$type <- as.factor(trans_test$type)
levels(trans_test$type) <- 1:length(levels(trans_test$type))
trans_test$type <- as.numeric(trans_test$type)
trans_test$operation <- as.factor(trans_test$operation)
levels(trans_test$operation) <- 1:length(levels(trans_test$operation))
trans_test$operation <- as.numeric(trans_test$operation)
trans_test$k_symbol <- as.factor(trans_test$k_symbol)
levels(trans_test$k_symbol) <- 1:length(levels(trans_test$k_symbol))
trans_test$k_symbol <- as.numeric(trans_test$k_symbol)
#set missing values
missing_un_95 <- (district$`unemploymant rate '95`) == "?"
district$`unemploymant rate '95`[missing_un_95] <- district$`unemploymant rate '96`[missing_un_95]
missing_crimes_95 <- (district$`no. of commited crimes '95`) == "?"
district$`no. of commited crimes '95`[missing_crimes_95] <- district$`no. of commited crimes '96`[missing_crimes_95]
district$`unemploymant rate '95` <- as.numeric(district$`unemploymant rate '95`)
district$`no. of commited crimes '95` <- as.numeric(district$`no. of commited crimes '95`)
#get women
women <- client %>% filter( ((birth_number / 100) %% 100) > 50)
men <- client %>% filter( ((birth_number / 100) %% 100) < 50)
#normalize date
women["birth_number"] <- women$birth_number - 5000
#set gender
women[,"gender"] <- 0
men[,"gender"] <- 1
client <- rbind(women,men)
client <- client[ with(client, order(client_id)),]
## /FILTER DATASETS #############
#################################
# districts
district[,"diff_unemploymant"] <- district[,"unemploymant rate '96"] - district[,"unemploymant rate '95"]
district[,"avg_unemploymant"] <- (district[,"unemploymant rate '96"] + district[,"unemploymant rate '95"])/2
district <- subset(district, select = -c(`unemploymant rate '95`, `unemploymant rate '96`))
district[,"diff_crimes"] <- district[,"no. of commited crimes '96"] - district[,"no. of commited crimes '95"]
district[,"avg_crimes"] <- (district[,"no. of commited crimes '96"] + district[,"no. of commited crimes '95"])/2
district[,"ratio_crimes"] <- district[,"avg_crimes"]/district[,"no. of inhabitants"]
district <- subset(district, select = -c(`no. of commited crimes '95`, `no. of commited crimes '96`))
#account
account$date <- as.Date(as.character(account$date + 19000000), "%Y%m%d")
#cards
card_test$issued <- as.Date(as.character(card_test$issued + 19000000), "%Y%m%d")
card_train$issued <- as.Date(as.character(card_train$issued + 19000000), "%Y%m%d")
#client
client$birth_number <- as.Date(as.character(client$birth_number + 19000000), "%Y%m%d")
client[,"birth_year"] <- as.numeric(format(client$birth_number,'%Y'))
#loan
loan_test$date <- as.Date(as.character(loan_test$date + 19000000), "%Y%m%d")
loan_train$date <- as.Date(as.character(loan_train$date + 19000000), "%Y%m%d")
#trans
trans_test$date <- as.Date(as.character(trans_test$date + 19000000), "%Y%m%d")
trans_train$date <- as.Date(as.character(trans_train$date + 19000000), "%Y%m%d")
library(dplyr)
client_district <- merge(client, district, by.x = c("district_id"), by.y = c("code"))
account_disp <- merge(account, disp)
colnames(account_disp)[4] <- "date_account"
colnames(account_disp)[7] <- "type_disp"
account_disp_trans_test <- merge(account_disp, trans_test, by = "account_id")
colnames(account_disp_trans_test)[9] <- "date_trans"
colnames(account_disp_trans_test)[10] <- "type_trans"
colnames(account_disp_trans_test)[12] <- "ammount_trans"
account_disp_trans_loans_train <- merge(account_disp_trans_train, loan_train, by = "account_id")
colnames(account_disp_trans_loans_train)[18] <- "date_loan"
colnames(account_disp_trans_loans_train)[19] <- "ammount_loan"
account_balances <- account_disp_trans_loans_train %>% group_by(account_id) %>% slice(date_trans < date_loan && which.max(date_trans))
sd_balance <- aggregate(trans_train[,"balance"], list(account_id = trans_train$account_id), sd)
sd_balance <- subset(sd_balance, select = c("account_id","balance"))
colnames(sd_balance)[2] <- "balance_sd"
account_balances_sd <- merge(account_balances,sd_balance)
account_balances_sd <- subset(account_balances_sd, select = -c(trans_id,date_trans,type_trans,operation,ammount_trans,k_symbol,bank,account,date_loan,ammount_loan))
account_balances_sd_cards <- full_join(account_balances_sd,card_train)
colnames(account_balances_sd_cards)[15] <- "type_card"
account_balances_sd_cards <- subset(account_balances_sd_cards, select = -c(card_id,issued))
account_balances_sd_cards_clients <- merge(account_balances_sd_cards, client)
account_balances_sd_cards_clients <- subset(account_balances_sd_cards_clients, select = -district_id)
colnames(account_balances_sd_cards)[2] <- "district_id_account"
all_dataset_without_account_district <- merge(account_balances_sd_cards, client_district)
all_dataset <- merge(account_balances_sd_cards_clients, client_district)
#remove useless ids
final_dataset <- subset(all_dataset_without_account_district, select = -c(district_id_account,client_id,account_id,disp_id,district_id, date_account))
final_dataset$type_card[is.na(final_dataset$type_card)] <- 0
load("~/GitHub/ecac-bank-loans/datasets.RData")
load("~/GitHub/ecac-bank-loans/datasets.RData")
library(dplyr)
#################################
## FILTER DATASETS ##############
# transform strings to int
account$frequency <- as.factor(account$frequency)
levels(account$frequency) <- 1:length(levels(account$frequency))
account$frequency <- as.numeric(account$frequency)
card_test$type <- as.factor(card_test$type)
levels(card_test$type) <- 1:length(levels(card_test$type))
card_test$type <- as.numeric(card_test$type)
card_train$type <- as.factor(card_train$type)
levels(card_train$type) <- 1:length(levels(card_train$type))
card_train$type <- as.numeric(card_train$type)
disp$type <- as.factor(disp$type)
levels(disp$type) <- 1:length(levels(disp$type))
disp$type <- as.numeric(disp$type)
district$name <- as.factor(district$name)
levels(district$name) <- 1:length(levels(district$name))
district$name <- as.numeric(district$name)
district$region <- as.factor(district$region)
levels(district$region) <- 1:length(levels(district$region))
district$region <- as.numeric(district$region)
trans_train$type <- as.factor(trans_train$type)
levels(trans_train$type) <- 1:length(levels(trans_train$type))
trans_train$type <- as.numeric(trans_train$type)
trans_train$operation <- as.factor(trans_train$operation)
levels(trans_train$operation) <- 1:length(levels(trans_train$operation))
trans_train$operation <- as.numeric(trans_train$operation)
trans_train$k_symbol <- as.factor(trans_train$k_symbol)
levels(trans_train$k_symbol) <- 1:length(levels(trans_train$k_symbol))
trans_train$k_symbol <- as.numeric(trans_train$k_symbol)
trans_test$type <- as.factor(trans_test$type)
levels(trans_test$type) <- 1:length(levels(trans_test$type))
trans_test$type <- as.numeric(trans_test$type)
trans_test$operation <- as.factor(trans_test$operation)
levels(trans_test$operation) <- 1:length(levels(trans_test$operation))
trans_test$operation <- as.numeric(trans_test$operation)
trans_test$k_symbol <- as.factor(trans_test$k_symbol)
levels(trans_test$k_symbol) <- 1:length(levels(trans_test$k_symbol))
trans_test$k_symbol <- as.numeric(trans_test$k_symbol)
#set missing values
missing_un_95 <- (district$`unemploymant rate '95`) == "?"
district$`unemploymant rate '95`[missing_un_95] <- district$`unemploymant rate '96`[missing_un_95]
missing_crimes_95 <- (district$`no. of commited crimes '95`) == "?"
district$`no. of commited crimes '95`[missing_crimes_95] <- district$`no. of commited crimes '96`[missing_crimes_95]
district$`unemploymant rate '95` <- as.numeric(district$`unemploymant rate '95`)
district$`no. of commited crimes '95` <- as.numeric(district$`no. of commited crimes '95`)
#get women
women <- client %>% filter( ((birth_number / 100) %% 100) > 50)
men <- client %>% filter( ((birth_number / 100) %% 100) < 50)
#normalize date
women["birth_number"] <- women$birth_number - 5000
#set gender
women[,"gender"] <- 0
men[,"gender"] <- 1
client <- rbind(women,men)
client <- client[ with(client, order(client_id)),]
## /FILTER DATASETS #############
#################################
# districts
district[,"diff_unemploymant"] <- district[,"unemploymant rate '96"] - district[,"unemploymant rate '95"]
district[,"avg_unemploymant"] <- (district[,"unemploymant rate '96"] + district[,"unemploymant rate '95"])/2
district <- subset(district, select = -c(`unemploymant rate '95`, `unemploymant rate '96`))
district[,"diff_crimes"] <- district[,"no. of commited crimes '96"] - district[,"no. of commited crimes '95"]
district[,"avg_crimes"] <- (district[,"no. of commited crimes '96"] + district[,"no. of commited crimes '95"])/2
district[,"ratio_crimes"] <- district[,"avg_crimes"]/district[,"no. of inhabitants"]
district <- subset(district, select = -c(`no. of commited crimes '95`, `no. of commited crimes '96`))
#account
account$date <- as.Date(as.character(account$date + 19000000), "%Y%m%d")
#cards
card_test$issued <- as.Date(as.character(card_test$issued + 19000000), "%Y%m%d")
card_train$issued <- as.Date(as.character(card_train$issued + 19000000), "%Y%m%d")
#client
client$birth_number <- as.Date(as.character(client$birth_number + 19000000), "%Y%m%d")
client[,"birth_year"] <- as.numeric(format(client$birth_number,'%Y'))
#loan
loan_test$date <- as.Date(as.character(loan_test$date + 19000000), "%Y%m%d")
loan_train$date <- as.Date(as.character(loan_train$date + 19000000), "%Y%m%d")
#trans
trans_test$date <- as.Date(as.character(trans_test$date + 19000000), "%Y%m%d")
trans_train$date <- as.Date(as.character(trans_train$date + 19000000), "%Y%m%d")
library(dplyr)
client_district <- merge(client, district, by.x = c("district_id"), by.y = c("code"))
account_disp <- merge(account, disp)
colnames(account_disp)[4] <- "date_account"
colnames(account_disp)[7] <- "type_disp"
account_disp_trans_train <- merge(account_disp, trans_train, by = "account_id")
colnames(account_disp_trans_test)[9] <- "date_trans"
colnames(account_disp_trans_test)[10] <- "type_trans"
colnames(account_disp_trans_test)[12] <- "ammount_trans"
account_disp_trans_loans_train <- merge(account_disp_trans_train, loan_train, by = "account_id")
colnames(account_disp_trans_loans_train)[18] <- "date_loan"
colnames(account_disp_trans_loans_train)[19] <- "ammount_loan"
account_balances <- account_disp_trans_loans_train %>% group_by(account_id) %>% slice(date_trans < date_loan && which.max(date_trans))
sd_balance <- aggregate(trans_train[,"balance"], list(account_id = trans_train$account_id), sd)
sd_balance <- subset(sd_balance, select = c("account_id","balance"))
colnames(sd_balance)[2] <- "balance_sd"
account_balances_sd <- merge(account_balances,sd_balance)
account_balances_sd <- subset(account_balances_sd, select = -c(trans_id,date_trans,type_trans,operation,ammount_trans,k_symbol,bank,account,date_loan,ammount_loan))
account_balances_sd_cards <- full_join(account_balances_sd,card_train)
colnames(account_balances_sd_cards)[15] <- "type_card"
account_balances_sd_cards <- subset(account_balances_sd_cards, select = -c(card_id,issued))
account_balances_sd_cards_clients <- merge(account_balances_sd_cards, client)
account_balances_sd_cards_clients <- subset(account_balances_sd_cards_clients, select = -district_id)
colnames(account_balances_sd_cards)[2] <- "district_id_account"
all_dataset_without_account_district <- merge(account_balances_sd_cards, client_district)
all_dataset <- merge(account_balances_sd_cards_clients, client_district)
#remove useless ids
final_dataset <- subset(all_dataset_without_account_district, select = -c(district_id_account,client_id,account_id,disp_id,district_id, date_account))
final_dataset$type_card[is.na(final_dataset$type_card)] <- 0
load("~/GitHub/ecac-bank-loans/datasets.RData")
library(dplyr)
#################################
## FILTER DATASETS ##############
# transform strings to int
account$frequency <- as.factor(account$frequency)
levels(account$frequency) <- 1:length(levels(account$frequency))
account$frequency <- as.numeric(account$frequency)
card_test$type <- as.factor(card_test$type)
levels(card_test$type) <- 1:length(levels(card_test$type))
card_test$type <- as.numeric(card_test$type)
card_train$type <- as.factor(card_train$type)
levels(card_train$type) <- 1:length(levels(card_train$type))
card_train$type <- as.numeric(card_train$type)
disp$type <- as.factor(disp$type)
levels(disp$type) <- 1:length(levels(disp$type))
disp$type <- as.numeric(disp$type)
district$name <- as.factor(district$name)
levels(district$name) <- 1:length(levels(district$name))
district$name <- as.numeric(district$name)
district$region <- as.factor(district$region)
levels(district$region) <- 1:length(levels(district$region))
district$region <- as.numeric(district$region)
trans_train$type <- as.factor(trans_train$type)
levels(trans_train$type) <- 1:length(levels(trans_train$type))
trans_train$type <- as.numeric(trans_train$type)
trans_train$operation <- as.factor(trans_train$operation)
levels(trans_train$operation) <- 1:length(levels(trans_train$operation))
trans_train$operation <- as.numeric(trans_train$operation)
trans_train$k_symbol <- as.factor(trans_train$k_symbol)
levels(trans_train$k_symbol) <- 1:length(levels(trans_train$k_symbol))
trans_train$k_symbol <- as.numeric(trans_train$k_symbol)
trans_test$type <- as.factor(trans_test$type)
levels(trans_test$type) <- 1:length(levels(trans_test$type))
trans_test$type <- as.numeric(trans_test$type)
trans_test$operation <- as.factor(trans_test$operation)
levels(trans_test$operation) <- 1:length(levels(trans_test$operation))
trans_test$operation <- as.numeric(trans_test$operation)
trans_test$k_symbol <- as.factor(trans_test$k_symbol)
levels(trans_test$k_symbol) <- 1:length(levels(trans_test$k_symbol))
trans_test$k_symbol <- as.numeric(trans_test$k_symbol)
#set missing values
missing_un_95 <- (district$`unemploymant rate '95`) == "?"
district$`unemploymant rate '95`[missing_un_95] <- district$`unemploymant rate '96`[missing_un_95]
missing_crimes_95 <- (district$`no. of commited crimes '95`) == "?"
district$`no. of commited crimes '95`[missing_crimes_95] <- district$`no. of commited crimes '96`[missing_crimes_95]
district$`unemploymant rate '95` <- as.numeric(district$`unemploymant rate '95`)
district$`no. of commited crimes '95` <- as.numeric(district$`no. of commited crimes '95`)
#get women
women <- client %>% filter( ((birth_number / 100) %% 100) > 50)
men <- client %>% filter( ((birth_number / 100) %% 100) < 50)
#normalize date
women["birth_number"] <- women$birth_number - 5000
#set gender
women[,"gender"] <- 0
men[,"gender"] <- 1
client <- rbind(women,men)
client <- client[ with(client, order(client_id)),]
## /FILTER DATASETS #############
#################################
# districts
district[,"diff_unemploymant"] <- district[,"unemploymant rate '96"] - district[,"unemploymant rate '95"]
district[,"avg_unemploymant"] <- (district[,"unemploymant rate '96"] + district[,"unemploymant rate '95"])/2
district <- subset(district, select = -c(`unemploymant rate '95`, `unemploymant rate '96`))
district[,"diff_crimes"] <- district[,"no. of commited crimes '96"] - district[,"no. of commited crimes '95"]
district[,"avg_crimes"] <- (district[,"no. of commited crimes '96"] + district[,"no. of commited crimes '95"])/2
district[,"ratio_crimes"] <- district[,"avg_crimes"]/district[,"no. of inhabitants"]
district <- subset(district, select = -c(`no. of commited crimes '95`, `no. of commited crimes '96`))
#account
account$date <- as.Date(as.character(account$date + 19000000), "%Y%m%d")
#cards
card_test$issued <- as.Date(as.character(card_test$issued + 19000000), "%Y%m%d")
card_train$issued <- as.Date(as.character(card_train$issued + 19000000), "%Y%m%d")
#client
client$birth_number <- as.Date(as.character(client$birth_number + 19000000), "%Y%m%d")
client[,"birth_year"] <- as.numeric(format(client$birth_number,'%Y'))
#loan
loan_test$date <- as.Date(as.character(loan_test$date + 19000000), "%Y%m%d")
loan_train$date <- as.Date(as.character(loan_train$date + 19000000), "%Y%m%d")
#trans
trans_test$date <- as.Date(as.character(trans_test$date + 19000000), "%Y%m%d")
trans_train$date <- as.Date(as.character(trans_train$date + 19000000), "%Y%m%d")
library(dplyr)
client_district <- merge(client, district, by.x = c("district_id"), by.y = c("code"))
account_disp <- merge(account, disp)
colnames(account_disp)[4] <- "date_account"
colnames(account_disp)[7] <- "type_disp"
account_disp_trans_train <- merge(account_disp, trans_train, by = "account_id")
colnames(account_disp_trans_train)[9] <- "date_trans"
colnames(account_disp_trans_train)[10] <- "type_trans"
colnames(account_disp_trans_train)[12] <- "ammount_trans"
account_disp_trans_loans_train <- merge(account_disp_trans_train, loan_train, by = "account_id")
colnames(account_disp_trans_loans_train)[18] <- "date_loan"
colnames(account_disp_trans_loans_train)[19] <- "ammount_loan"
account_balances <- account_disp_trans_loans_train %>% group_by(account_id) %>% slice(date_trans < date_loan && which.max(date_trans))
sd_balance <- aggregate(trans_train[,"balance"], list(account_id = trans_train$account_id), sd)
sd_balance <- subset(sd_balance, select = c("account_id","balance"))
colnames(sd_balance)[2] <- "balance_sd"
account_balances_sd <- merge(account_balances,sd_balance)
account_balances_sd <- subset(account_balances_sd, select = -c(trans_id,date_trans,type_trans,operation,ammount_trans,k_symbol,bank,account,date_loan,ammount_loan))
account_balances_sd_cards <- full_join(account_balances_sd,card_train)
colnames(account_balances_sd_cards)[15] <- "type_card"
account_balances_sd_cards <- subset(account_balances_sd_cards, select = -c(card_id,issued))
account_balances_sd_cards_clients <- merge(account_balances_sd_cards, client)
account_balances_sd_cards_clients <- subset(account_balances_sd_cards_clients, select = -district_id)
colnames(account_balances_sd_cards)[2] <- "district_id_account"
all_dataset_without_account_district <- merge(account_balances_sd_cards, client_district)
all_dataset <- merge(account_balances_sd_cards_clients, client_district)
View(all_dataset)
#household
account_household <- trans_train %>% slice(which(k_symbol == 1))
account_household <- aggregate(account_household[,"amount"], list(account_id = account_household$account_id), mean)
colnames(account_household)[2] <- "household_amount"
pre_final_dataset <- left_join(all_dataset,account_household)
pre_final_dataset <- left_join(all_dataset_without_account_district,account_household)
#remove useless ids
final_dataset <- subset(pre_final_dataset, select = -c(district_id_account,client_id,account_id,disp_id,district_id, date_account))
final_dataset$type_card[is.na(final_dataset$type_card)] <- 0
final_dataset$household_amount[is.na(final_dataset$household_amount)] <- 0
write.csv(final_dataset, file = "C:\\Users\\andre\\Documents\\GitHub\\ecac-bank-loans\\datasets\\train_09.csv", row.names = FALSE)
library(dplyr)
client_district <- merge(client, district, by.x = c("district_id"), by.y = c("code"))
account_disp <- merge(account, disp)
colnames(account_disp)[4] <- "date_account"
colnames(account_disp)[7] <- "type_disp"
account_disp_trans_test <- merge(account_disp, trans_test, by = "account_id")
colnames(account_disp_trans_test)[9] <- "date_trans"
colnames(account_disp_trans_test)[10] <- "type_trans"
colnames(account_disp_trans_test)[12] <- "ammount_trans"
account_disp_trans_loans_test <- merge(account_disp_trans_test, loan_test, by = "account_id")
colnames(account_disp_trans_loans_test)[18] <- "date_loan"
colnames(account_disp_trans_loans_test)[19] <- "ammount_loan"
account_balances <- account_disp_trans_loans_test %>% group_by(account_id) %>% slice(date_trans < date_loan && which.max(date_trans))
sd_balance <- aggregate(trans_test[,"balance"], list(account_id = trans_test$account_id), sd)
sd_balance <- subset(sd_balance, select = c("account_id","balance"))
colnames(sd_balance)[2] <- "balance_sd"
account_balances_sd <- merge(account_balances,sd_balance)
account_balances_sd <- subset(account_balances_sd, select = -c(trans_id,date_trans,type_trans,operation,ammount_trans,k_symbol,bank,account,date_loan,ammount_loan))
account_balances_sd_cards <- full_join(account_balances_sd,card_test)
colnames(account_balances_sd_cards)[15] <- "type_card"
account_balances_sd_cards <- subset(account_balances_sd_cards, select = -c(card_id,issued))
account_balances_sd_cards_clients <- merge(account_balances_sd_cards, client)
account_balances_sd_cards_clients <- subset(account_balances_sd_cards_clients, select = -district_id)
colnames(account_balances_sd_cards)[2] <- "district_id_account"
all_dataset_without_account_district <- merge(account_balances_sd_cards, client_district)
#household
account_household <- trans_train %>% slice(which(k_symbol == 1))
account_household <- aggregate(account_household[,"amount"], list(account_id = account_household$account_id), mean)
colnames(account_household)[2] <- "household_amount"
pre_final_dataset <- left_join(all_dataset_without_account_district,account_household)
#remove useless ids
final_dataset <- subset(pre_final_dataset, select = -c(district_id_account,client_id,account_id,disp_id,district_id, date_account))
final_dataset$type_card[is.na(final_dataset$type_card)] <- 0
final_dataset$household_amount[is.na(final_dataset$household_amount)] <- 0
write.csv(final_dataset, file = "C:\\Users\\andre\\Documents\\GitHub\\ecac-bank-loans\\datasets\\test_09.csv", row.names = FALSE)
